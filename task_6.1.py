# Задание к Уроку №6
# Задание №1 с урока №3: В диапазоне натуральных чисел от 2 до 99 определить, сколько из них кратны каждому
# из чисел в диапазоне от 2 до 9.

# Первый вариант решения Задачи
# ОС моего ПК 64-х разрядное, интерпретатор 32-х разрядный.

# 1. Результат решения: Общий объём занимаемой памяти равен 3308
# 2. Данное решение занимает больший объём памяти, так как все данные (само число, строка, количество кратных чисел)
# записываются в массив, после чего полученный список выводится пользователю как результат.
# Повторяющаяся строка в массиве занимает львиную часть памяти

# Из-за такого своего неразумного решения взял для разбора именно эту задачу.

# Мне ставить 5-ки не обязательно, готов к прямой критики)


# Мой вариант решения задачи
import sys

num = [[0]*3 for _ in range(8)]
for i in range(2, 100):
    for n in range(2, 10):
        if i == 2:
            num[n - 2][0] = n
            num[n - 2][1] =  '- имеет кратных чисел в количестве:'
        if i % n == 0:
            num[n - 2][2] += 1
'''for line in num:
    for c in line:
        print(f'{c}', end='')
    print('')'''
#print(num)
#*********************************************************************


# Вычисляю общий объём памяти, который занимают используемые объекты
def show(var):                                                    # Функция для вычисления объёма занимаемой памяти каждой переменной
    sum_var = sys.getsizeof(var)                                  # Объём памяти всего объекта
    #print(f'{type(var)=}, {sys.getsizeof(var)=}, {var=}')
    if hasattr(var, '__iter__') and not isinstance(var, str):
        for i in var:
            sum_var += show(i)                                    # Суммируем объём занимаемой памяти в каждой переменной в списке
    elif isinstance(var, str):
        sum_var += len(var)                                       # Суммируем объём занимаемой памяти каждого элемента в строке
        #print(len(var))
    #print(f'{sum_var=}')
    return sum_var

def show_all(*vars):                                              # Функция для вычисления объёма занимаемой памяти всех перечисленных переменных
    sum_all = 0
    for k in vars:
        sum_all += show(k)
    print(f'Общий объём занимаемой памяти равен {sum_all}')

show_all(num, i, range(2, 100), n, range(2, 10))